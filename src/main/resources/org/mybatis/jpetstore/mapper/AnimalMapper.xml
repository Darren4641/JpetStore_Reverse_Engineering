<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mybatis.jpetstore.mapper.AnimalMapper">

    <cache />
    <insert id="addCharacter" parameterType="hashMap">
        INSERT INTO ANIMALCHARACTER (animalId, `character`)
        VALUES (#{id},#{character})
    </insert>

    <insert id="editCharacter" parameterType="hashMap">
        INSERT INTO ANIMALCHARACTER (animalId,`character`)
        SELECT #{id},#{character} FROM dual WHERE NOT exists(
                SELECT animalId, `character`FROM ANIMALCHARACTER WHERE animalId = #{id} AND `character` = #{character}
            )
    </insert>
    <select id="getCharacterList" parameterType="int" resultType="String">
        SELECT `character`FROM ANIMALCHARACTER WHERE animalId = #{id};
    </select>
    <delete id="deleteOldCharacter" parameterType="hashMap">
        DELETE FROM ANIMALCHARACTER WHERE animalId = #{id} AND `character`=#{character}
    </delete>

    <insert id="insertAnimal" parameterType="AnimalMating">
        INSERT INTO MATINGANIMAL
            (userid, imgUrl, title, contents, categoryid, characters,sex)
        VALUES
            (#{userId}, #{imgUrl}, #{title}, #{contents}, #{categoryid} ,#{characters},#{sex})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>
    <update id="plusViewCount" parameterType="AnimalMating">
        UPDATE MATINGANIMAL SET view=view+1 where id=#{id}
    </update>


    <select id="getAnimalMatingList" parameterType="hashMap" resultType="AnimalMating">


        SELECT id, userid, imgurl, title, contents, categoryid, characters,sex
        FROM MATINGANIMAL
        ORDER BY createdate desc limit #{start}, #{end}

    </select>

    <select id="getAnimalMatingCount" resultType="Integer">
        SELECT  count(*)
        FROM MATINGANIMAL
    </select>

    <select id="getAnimalMattingDetail" resultType="AnimalMating">
        select id, userid, imgurl, title, contents, categoryid, characters, sex, case
        when YEAR(createDate) = YEAR(now()) then
        case
        when (TIMESTAMPDIFF(DAY, createDate, now())) > 1
        then concat(YEAR(createDate), '년 ', MONTH(createDate), '월 ', DAY(createDate), '일 ',HOUR(createdate),'시 ',MINUTE(createdate),'분')
        when TIMESTAMPDIFF(minute, createDate, now()) <![CDATA[<]]> 1
        then concat(TIMESTAMPDIFF(second, createDate, now()),'초 전')
        when TIMESTAMPDIFF(hour, createDate, now()) > 24
        then concat(TIMESTAMPDIFF(DAY, createDate, now()), '일 전')
        when TIMESTAMPDIFF(hour, createDate, now()) <![CDATA[<]]> 1
        then concat(TIMESTAMPDIFF(minute, createDate, now()), '분 전')
        when TIMESTAMPDIFF(hour, createDate, now()) <![CDATA[<]]> 24
        then concat(TIMESTAMPDIFF(hour, createDate, now()), '시간 전')
        end end as createDate,view
        from MATINGANIMAL
        where id=#{id}
    </select>

    <select id="searchAnimalMatingTitle" parameterType="hashMap" resultType="AnimalMating">
        select id, userid, imgurl, title, contents, categoryid, characters
        FROM MATINGANIMAL
        WHERE lower(title) like #{value} ORDER BY createdate desc limit #{start}, #{end}
    </select>

    <select id="searchAnimalMatingContents" parameterType="hashMap" resultType="AnimalMating">
        select id, userid, imgurl, title, contents, categoryid, characters
        FROM MATINGANIMAL
        WHERE lower(contents) like #{value} ORDER BY createdate desc limit #{start}, #{end}
    </select>

    <select id="searchAnimalMatingUser" parameterType="hashMap" resultType="AnimalMating">
        select id, userid, imgurl, title, contents, categoryid, characters
        FROM MATINGANIMAL
        WHERE lower(userid) like #{value} ORDER BY createdate desc limit #{start}, #{end}
    </select>
    <select id="searchAnimalMatingTitleCount" parameterType="hashMap" resultType="Integer">
        select count(*)
        FROM MATINGANIMAL
        WHERE lower(title) like #{value}
    </select>

    <select id="searchAnimalMatingContentsCount" parameterType="hashMap" resultType="Integer">
        select count(*)
        FROM MATINGANIMAL
        WHERE lower(contents) like #{value}
    </select>

    <select id="searchAnimalMatingUserCount" parameterType="hashMap" resultType="Integer">
        select count(*)
        FROM MATINGANIMAL
        WHERE lower(userid) like #{value}
    </select>

    <update id="editAnimal" parameterType="AnimalMating">
        UPDATE MATINGANIMAL SET
                                imgurl = #{imgUrl},
                                title = #{title},
                                contents = #{contents},
                                categoryid = #{categoryid},
                                characters = #{characters},
                                sex=#{sex}
        WHERE id = #{id}
    </update>

</mapper>
