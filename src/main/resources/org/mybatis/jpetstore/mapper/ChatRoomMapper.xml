<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mybatis.jpetstore.mapper.ChatMapper">

    <cache />


    <insert id="insertChatRoom" parameterType="ChatRoom">
        insert into CHATROOM
            (postId, roomId, userId, roomName, imgurl)
        values(#{postId}, #{roomId}, #{userId}, #{roomName}, #{imgurl})
    </insert>

    <select id="getChatRoom" resultType="ChatRoom">
        SELECT postId, roomId, userId, roomName, imgurl
        FROM CHATROOM
        WHERE roomId = #{roomId}
    </select>

    <select id="getChatRoomList" resultType="ChatRoom">
        SELECT cr.postId AS postId, cr.roomId AS roomId, cr.userId AS userId, cru.receiver AS receiver, cr.roomName AS roomName, cr.imgurl AS imgurl, cm.content AS content
        FROM CHATROOM AS cr
                 JOIN CHATROOMUSER AS cru
                      ON cr.roomId = cru.roomId
                 LEFT JOIN (SELECT *
                            FROM ( SELECT sender, roomId, content FROM CHATMESSAGE ORDER BY createDate DESC LIMIT 18446744073709551615) AS order_chatmessage
                            GROUP BY order_chatmessage.roomId) AS cm
                           ON cr.roomId = cm.roomId
        WHERE cru.userId = #{userId};
    </select>

    <update id="readMessage" parameterType="ChatRoomUser">
        UPDATE CHATROOMUSER SET
            isRead = 1 WHERE roomId = #{roomId} AND userId = #{userId}
    </update>

    <update id="noneReadMessage" parameterType="ChatRoomUser">
        UPDATE CHATROOMUSER SET
            isRead = 0 WHERE roomId = #{roomId} AND userId = #{userId}
    </update>

    <insert id="inviteUser" parameterType="ChatRoomUser">
        INSERT INTO CHATROOMUSER
            (roomId, userId, receiver, isRead)
        VALUES
            (#{roomId}, #{userId}, #{receiver}, 1)
    </insert>

    <insert id="insertMessage" parameterType="ChatMessage">
        INSERT INTO CHATMESSAGE(type, roomId, sender, receiver, content, createDate)
        VALUES (#{type}, #{roomId}, #{sender}, #{receiver}, #{content}, NOW())
    </insert>

    <select id="getMessages" resultType="ChatMessage">
        SELECT type, roomId, sender, receiver, content, createDate
        FROM CHATMESSAGE WHERE roomId = #{roomId} ORDER BY createDate ASC
    </select>


</mapper>
